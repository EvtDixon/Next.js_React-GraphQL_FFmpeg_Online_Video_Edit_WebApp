{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Canvas from '../components/Canvas';\nimport Timeline from '../components/Timeline';\nimport { getAllVideosQuery } from '../graphql/client/queries/videos';\n\nvar Home = function Home(_ref) {\n  _s();\n\n  var videos = _ref.videos;\n\n  var _useState = useState([]),\n      timelineVideos = _useState[0],\n      setTimelineVideos = _useState[1];\n\n  var addToTimeline = function addToTimeline(video) {\n    if (timelineVideos.find(function (timelineVideo) {\n      return timelineVideo.fileName === video.fileName;\n    })) {\n      return;\n    }\n\n    setTimelineVideos([].concat(_toConsumableArray(timelineVideos), [video]));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"font-sans w-full h-screen flex\"\n  }, __jsx(\"div\", {\n    className: \"w-20 hidden md:block h-full bg-white border-r border-gray-200 shadow\"\n  }, __jsx(\"div\", {\n    className: \"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\"\n  }, __jsx(\"svg\", {\n    stroke: \"currentColor\",\n    fill: \"none\",\n    strokeWidth: 2,\n    viewBox: \"0 0 24 24\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"stroke-current w-5 mb-2\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"polygon\", {\n    points: \"23 7 16 12 23 17 23 7\"\n  }), __jsx(\"rect\", {\n    x: 1,\n    y: 5,\n    width: 15,\n    height: 14,\n    rx: 2,\n    ry: 2\n  })), __jsx(\"span\", {\n    className: \"text-sm\"\n  }, \"Videos\")), __jsx(\"div\", {\n    className: \"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\"\n  }, __jsx(\"svg\", {\n    stroke: \"currentColor\",\n    fill: \"none\",\n    strokeWidth: 2,\n    viewBox: \"0 0 24 24\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"stroke-current w-5 mb-2\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"polygon\", {\n    points: \"23 7 16 12 23 17 23 7\"\n  }), __jsx(\"rect\", {\n    x: 1,\n    y: 5,\n    width: 15,\n    height: 14,\n    rx: 2,\n    ry: 2\n  })), __jsx(\"span\", {\n    className: \"text-sm\"\n  }, \"Images\")), __jsx(\"div\", {\n    className: \"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\"\n  }, __jsx(\"svg\", {\n    stroke: \"currentColor\",\n    fill: \"none\",\n    strokeWidth: 2,\n    viewBox: \"0 0 24 24\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"stroke-current w-5 mb-2\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"polygon\", {\n    points: \"23 7 16 12 23 17 23 7\"\n  }), __jsx(\"rect\", {\n    x: 1,\n    y: 5,\n    width: 15,\n    height: 14,\n    rx: 2,\n    ry: 2\n  })), __jsx(\"span\", {\n    className: \"text-sm\"\n  }, \"Texts\")), __jsx(\"div\", {\n    className: \"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\"\n  }, __jsx(\"svg\", {\n    stroke: \"currentColor\",\n    fill: \"none\",\n    strokeWidth: 2,\n    viewBox: \"0 0 24 24\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"stroke-current w-5 mb-2\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"polygon\", {\n    points: \"23 7 16 12 23 17 23 7\"\n  }), __jsx(\"rect\", {\n    x: 1,\n    y: 5,\n    width: 15,\n    height: 14,\n    rx: 2,\n    ry: 2\n  })), __jsx(\"span\", {\n    className: \"text-sm\"\n  }, \"Templates\"))), __jsx(\"div\", {\n    className: \"flex-grow bg-gray-100\",\n    style: {\n      width: 'calc(100% - 5rem)'\n    }\n  }, __jsx(\"div\", {\n    className: \"flex flex-wrap w-full h-auto md:h-6/10\"\n  }, __jsx(\"div\", {\n    className: \"w-full md:w-2/12 h-full px-5 py-6 bg-white border-r border-gray-200 overflow-scroll\"\n  }, videos.map(function (video) {\n    return __jsx(\"img\", {\n      onClick: function onClick() {\n        return addToTimeline(video);\n      },\n      key: video.fileName,\n      alt: video.fileName,\n      src: \"/\".concat(video.fileName, \"/preview-1.png\"),\n      className: \"w-full cursor-pointer rounded-lg shadow mt-5\"\n    });\n  })), __jsx(\"div\", {\n    className: \"w-full md:w-8/12 px-5 py-12\"\n  }, __jsx(Canvas, null)), __jsx(\"div\", {\n    className: \"w-full md:w-2/12 px-5 py-12 bg-white border-l border-gray-200\"\n  })), __jsx(\"div\", {\n    className: \"w-full bg-white h-full md:h-4/10 border-t border-gray-200 shadow\"\n  }, __jsx(Timeline, {\n    videos: timelineVideos\n  })))));\n};\n\n_s(Home, \"kZdnIN+txzpkQLjqeDQNix5f8vo=\");\n\n_c = Home;\n\nHome.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var urqlClient, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            urqlClient = _ref2.urqlClient;\n            _context.next = 3;\n            return urqlClient.query(getAllVideosQuery()).toPromise();\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", {\n              videos: response.data.videos\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/hju/Documents/Projects/project_on_git_for_developers/preview_test_project/pages/index.js"],"names":["useState","Canvas","Timeline","getAllVideosQuery","Home","videos","timelineVideos","setTimelineVideos","addToTimeline","video","find","timelineVideo","fileName","width","map","getInitialProps","urqlClient","query","toPromise","response","data"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Canvas from '../components/Canvas'\nimport Timeline from '../components/Timeline'\nimport { getAllVideosQuery } from '../graphql/client/queries/videos'\n\nconst Home = ({ videos }) => {\n    const [timelineVideos, setTimelineVideos] = useState([])\n\n    const addToTimeline = (video) => {\n        if (\n            timelineVideos.find(\n                (timelineVideo) => timelineVideo.fileName === video.fileName\n            )\n        ) {\n            return\n        }\n\n        setTimelineVideos([...timelineVideos, video])\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"font-sans w-full h-screen flex\">\n                <div className=\"w-20 hidden md:block h-full bg-white border-r border-gray-200 shadow\">\n                    <div className=\"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\">\n                        <svg\n                            stroke=\"currentColor\"\n                            fill=\"none\"\n                            strokeWidth={2}\n                            viewBox=\"0 0 24 24\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"stroke-current w-5 mb-2\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <polygon points=\"23 7 16 12 23 17 23 7\" />\n                            <rect\n                                x={1}\n                                y={5}\n                                width={15}\n                                height={14}\n                                rx={2}\n                                ry={2}\n                            />\n                        </svg>\n                        <span className=\"text-sm\">Videos</span>\n                    </div>\n                    <div className=\"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\">\n                        <svg\n                            stroke=\"currentColor\"\n                            fill=\"none\"\n                            strokeWidth={2}\n                            viewBox=\"0 0 24 24\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"stroke-current w-5 mb-2\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <polygon points=\"23 7 16 12 23 17 23 7\" />\n                            <rect\n                                x={1}\n                                y={5}\n                                width={15}\n                                height={14}\n                                rx={2}\n                                ry={2}\n                            />\n                        </svg>\n                        <span className=\"text-sm\">Images</span>\n                    </div>\n                    <div className=\"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\">\n                        <svg\n                            stroke=\"currentColor\"\n                            fill=\"none\"\n                            strokeWidth={2}\n                            viewBox=\"0 0 24 24\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"stroke-current w-5 mb-2\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <polygon points=\"23 7 16 12 23 17 23 7\" />\n                            <rect\n                                x={1}\n                                y={5}\n                                width={15}\n                                height={14}\n                                rx={2}\n                                ry={2}\n                            />\n                        </svg>\n                        <span className=\"text-sm\">Texts</span>\n                    </div>\n                    <div className=\"w-full flex flex-col items-center justify-center py-3 text-gray-700 hover:text-blue-500 font-bold cursor-pointer mt-12\">\n                        <svg\n                            stroke=\"currentColor\"\n                            fill=\"none\"\n                            strokeWidth={2}\n                            viewBox=\"0 0 24 24\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"stroke-current w-5 mb-2\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                            <polygon points=\"23 7 16 12 23 17 23 7\" />\n                            <rect\n                                x={1}\n                                y={5}\n                                width={15}\n                                height={14}\n                                rx={2}\n                                ry={2}\n                            />\n                        </svg>\n                        <span className=\"text-sm\">Templates</span>\n                    </div>                \n                </div>\n\n                <div\n                    className=\"flex-grow bg-gray-100\"\n                    style={{ width: 'calc(100% - 5rem)' }}\n                >\n                    <div className=\"flex flex-wrap w-full h-auto md:h-6/10\">\n                        <div className=\"w-full md:w-2/12 h-full px-5 py-6 bg-white border-r border-gray-200 overflow-scroll\">\n                            {videos.map((video) => (\n                                <img\n                                    onClick={() => addToTimeline(video)}\n                                    key={video.fileName}\n                                    alt={video.fileName}\n                                    src={`/${video.fileName}/preview-1.png`}\n                                    className=\"w-full cursor-pointer rounded-lg shadow mt-5\"\n                                />\n                            ))}\n                        </div>\n\n                        <div className=\"w-full md:w-8/12 px-5 py-12\">\n                            <Canvas />\n                        </div>\n\n                        <div className=\"w-full md:w-2/12 px-5 py-12 bg-white border-l border-gray-200\"></div>\n                    </div>\n\n                    <div className=\"w-full bg-white h-full md:h-4/10 border-t border-gray-200 shadow\">\n                        <Timeline videos={timelineVideos} />\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nHome.getInitialProps = async ({ urqlClient }) => {\n    const response = await urqlClient.query(getAllVideosQuery()).toPromise()\n\n    return {\n        videos: response.data.videos,\n    }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}