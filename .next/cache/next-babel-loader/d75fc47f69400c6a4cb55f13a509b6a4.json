{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from 'react';\nimport LineCursor from '../LineCursor';\nimport RenderVideoOnTimeline from '../RenderVideoOnTimeline';\n\nvar Timeline = function Timeline(_ref) {\n  _s();\n\n  var videos = _ref.videos;\n\n  var _useState = useState(false),\n      playing = _useState[0],\n      setPlaying = _useState[1];\n\n  var _useState2 = useState(120),\n      framesPerSecond = _useState2[0],\n      setFramesPerSecond = _useState2[1];\n\n  var _useState3 = useState(120),\n      timelineSeconds = _useState3[0],\n      setTimelineSeconds = _useState3[1];\n\n  var _useState4 = useState(0),\n      lineCursorPosition = _useState4[0],\n      setLineCursorPosition = _useState4[1];\n\n  var timelineWidth = framesPerSecond * timelineSeconds; // 60 (default) frames per second, multiplied by 360 (default) seconds.\n\n  return __jsx(\"div\", {\n    className: \"w-full h-full\"\n  }, __jsx(\"div\", {\n    className: \"h-12 w-full border-b border-gray-200 flex justify-between items-center px-4\"\n  }, __jsx(\"span\", {\n    onClick: function onClick() {\n      return setPlaying(!playing);\n    },\n    className: \"cursor-pointer text-brown-500 font-bold uppercase text-sm\"\n  }, playing ? 'pause' : 'play'), __jsx(\"span\", {\n    className: \"rounded-full bg-gray-300 text-gray-900 font-bold text-sm px-3 py-1\"\n  }, \"00:00:00:00\"), __jsx(\"svg\", {\n    className: \"cursor-pointer\",\n    style: {\n      transform: 'rotate(180deg)'\n    },\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: 0,\n    viewBox: \"0 0 448 512\",\n    height: \"1em\",\n    width: \"1em\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"\n  }))), __jsx(\"div\", {\n    style: {\n      height: 'calc(100% - 4rem)'\n    },\n    className: \"relative w-full px-4 mt-4 overflow-scroll\"\n  }, __jsx(LineCursor, {\n    position: lineCursorPosition,\n    setPosition: setLineCursorPosition\n  }), __jsx(\"div\", {\n    className: \"bg-gray-100 h-12 rounded-lg flex\",\n    style: {\n      width: timelineWidth\n    }\n  }, videos.map(function (video) {\n    return __jsx(Fragment, {\n      key: video.fileName\n    }, __jsx(RenderVideoOnTimeline, {\n      video: video\n    }), __jsx(\"span\", {\n      className: \"video-separator-marker\"\n    }));\n  }))));\n};\n\n_s(Timeline, \"N9w3nkoxn8OqCtvFMqwJa/G8Lc4=\");\n\n_c = Timeline;\nexport default Timeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"sources":["/Users/hju/Documents/Projects/project_on_git_for_developers/preview_test_project/components/Timeline/Timeline.js"],"names":["useState","Fragment","LineCursor","RenderVideoOnTimeline","Timeline","videos","playing","setPlaying","framesPerSecond","setFramesPerSecond","timelineSeconds","setTimelineSeconds","lineCursorPosition","setLineCursorPosition","timelineWidth","transform","height","width","map","video","fileName"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACCL,QAAQ,CAAC,KAAD,CADT;AAAA,MACtBM,OADsB;AAAA,MACbC,UADa;;AAAA,mBAEiBP,QAAQ,CAAC,GAAD,CAFzB;AAAA,MAEtBQ,eAFsB;AAAA,MAELC,kBAFK;;AAAA,mBAGiBT,QAAQ,CAAC,GAAD,CAHzB;AAAA,MAGtBU,eAHsB;AAAA,MAGLC,kBAHK;;AAAA,mBAIuBX,QAAQ,CAAC,CAAD,CAJ/B;AAAA,MAItBY,kBAJsB;AAAA,MAIFC,qBAJE;;AAM7B,MAAMC,aAAa,GAAGN,eAAe,GAAGE,eAAxC,CAN6B,CAM2B;;AAExD,SACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AACI,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,KADb;AAEI,IAAA,SAAS,EAAC;AAFd,KAIKA,OAAO,GAAG,OAAH,GAAa,MAJzB,CADJ,EAQI;AAAM,IAAA,SAAS,EAAC;AAAhB,mBARJ,EAYI;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAFX;AAGI,IAAA,MAAM,EAAC,cAHX;AAII,IAAA,IAAI,EAAC,cAJT;AAKI,IAAA,WAAW,EAAE,CALjB;AAMI,IAAA,OAAO,EAAC,aANZ;AAOI,IAAA,MAAM,EAAC,KAPX;AAQI,IAAA,KAAK,EAAC,KARV;AASI,IAAA,KAAK,EAAC;AATV,KAWI;AAAM,IAAA,CAAC,EAAC;AAAR,IAXJ,CAZJ,CADJ,EA4BI;AACI,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,SAAS,EAAC;AAFd,KAII,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEJ,kBAAtB;AAA0C,IAAA,WAAW,EAAEC;AAAvD,IAJJ,EAKI;AACI,IAAA,SAAS,EAAC,kCADd;AAEI,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAEH;AAAT;AAFX,KAIKT,MAAM,CAACa,GAAP,CAAW,UAACC,KAAD;AAAA,WACR,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACC;AAArB,OACI,MAAC,qBAAD;AAAuB,MAAA,KAAK,EAAED;AAA9B,MADJ,EAGI;AAAM,MAAA,SAAS,EAAC;AAAhB,MAHJ,CADQ;AAAA,GAAX,CAJL,CALJ,CA5BJ,CADJ;AAiDH,CAzDD;;GAAMf,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import { useState, Fragment } from 'react'\n\nimport LineCursor from '../LineCursor'\nimport RenderVideoOnTimeline from '../RenderVideoOnTimeline'\n\nconst Timeline = ({ videos }) => {\n    const [playing, setPlaying] = useState(false)\n    const [framesPerSecond, setFramesPerSecond] = useState(120)\n    const [timelineSeconds, setTimelineSeconds] = useState(120)\n    const [lineCursorPosition, setLineCursorPosition] = useState(0)\n\n    const timelineWidth = framesPerSecond * timelineSeconds // 60 (default) frames per second, multiplied by 360 (default) seconds.\n\n    return (\n        <div className=\"w-full h-full\">\n            <div className=\"h-12 w-full border-b border-gray-200 flex justify-between items-center px-4\">\n                <span\n                    onClick={() => setPlaying(!playing)}\n                    className=\"cursor-pointer text-brown-500 font-bold uppercase text-sm\"\n                >\n                    {playing ? 'pause' : 'play'}\n                </span>\n\n                <span className=\"rounded-full bg-gray-300 text-gray-900 font-bold text-sm px-3 py-1\">\n                    00:00:00:00\n                </span>\n\n                <svg\n                    className=\"cursor-pointer\"\n                    style={{ transform: 'rotate(180deg)' }}\n                    stroke=\"currentColor\"\n                    fill=\"currentColor\"\n                    strokeWidth={0}\n                    viewBox=\"0 0 448 512\"\n                    height=\"1em\"\n                    width=\"1em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                    <path d=\"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\" />\n                </svg>\n            </div>\n\n            <div\n                style={{ height: 'calc(100% - 4rem)' }}\n                className=\"relative w-full px-4 mt-4 overflow-scroll\"\n            >\n                <LineCursor position={lineCursorPosition} setPosition={setLineCursorPosition}  />\n                <div\n                    className=\"bg-gray-100 h-12 rounded-lg flex\"\n                    style={{ width: timelineWidth }}\n                >\n                    {videos.map((video) => (\n                        <Fragment key={video.fileName}>\n                            <RenderVideoOnTimeline video={video} />\n\n                            <span className=\"video-separator-marker\"></span>\n                        </Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Timeline\n"]},"metadata":{},"sourceType":"module"}